# Flags del compilador y de Valgrind.
CC := gcc
VALGRIND = valgrind --leak-check=full --track-origins=yes --show-reachable=yes --error-exitcode=2
ARCHIVOS = $(wildcard *.c)
ARCHIVOS_SIN_UNIT_TEST := $(filter-out unit_test.c, $(ARCHIVOS))

# Delete source files so students can't read and print test cases
# @ --> don't print command to stdout
build: $(ARCHIVOS:.c=.o)
	$(CC) ${CFLAGS} -o main $^
	@rm ${ARCHIVOS}

run:
	./main

# Build only student files so we get a nice error message
build_pre_unit_test: $(ARCHIVOS_SIN_UNIT_TEST)
	$(CC) ${CFLAGS} -c $^ ${LDFLAGS}


# Build with criterion lib and delete source files so students can't read and print test cases
# @ --> don't print command to stdout
build_unit_test: $(ARCHIVOS:.c=.o)
	$(CC) ${CFLAGS} -o main $^ ${LDFLAGS} -lcriterion
	@rm ${ARCHIVOS}

run_unit_test:
	./main --json=unit_test_results_output.json --quiet --always-succeed

.PHONY: main clean